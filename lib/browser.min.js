var Sa=function(a){'use strict';var b=Math.pow;const c=Object.freeze({View:1,Add:2,Update:4,Delete:8}),d=class{static hasPermission(a,b){return a===(b&a)}static extendTypes(a){const d={},e=Object.keys(c),f=c[e[0]];let g=Object.keys(c).length;0===f&&(g-=1),a.forEach(a=>[d[a]=b(2,g++)]);const h=Object.freeze(Object.assign(Object.assign({},c),d));return h}};const e=d.extendTypes(["Publish","Share"]);return a.PermissionType=c,a.Permissions=d,a.PermissionsBuilder=class a{constructor(a){this.types=a}fromKeys(a){this.types;let b=0;return a.forEach(a=>{const c=this.types[a],d=b|c;b=d}),b}byExclusion(a){const b=this.types,c=Object.getOwnPropertyNames(this.types).filter(b=>-1===a.indexOf(b));return this.fromKeys(c)}fromRange(a,b){const c=this.types,d=Object.getOwnPropertyNames(this.types);let e=0;return d.forEach(c=>{const d=this.types[c];if(d>=a&&d<=b){const a=e|d;e=a}}),e}},a.Security=class a{constructor(){this.dataMap=new Map}addPermissionsInfo(a){this.dataMap.set(a.id,a.permissions)}hasPermissions(a){const{id:b,domain:c,permissionType:e}=a;if(this.dataMap.has(b)){const a=this.dataMap.get(b);if(a&&a[c]){const b=a[c];return d.hasPermission(e,b)}}return!1}},a.YourAppPermissionType=e,a}({});
